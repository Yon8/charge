<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lxy.charge.mapper.charge.UserMapper" >

    <resultMap id="BaseResultMap" type="com.lxy.charge.pojo.charge.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="plate" property="plate" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="balance" property="balance" jdbcType="DOUBLE"/>
    </resultMap>

    <select id="getUserList" resultMap="BaseResultMap">
        SELECT * FROM user
        <where>
            <if test="id != null" >
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="name != null" >
                and name like concat('%', #{name,jdbcType=VARCHAR}, '%')
            </if>
        </where>
    </select>
    <delete id="userDelete">
        delete from user where id=#{id}
    </delete>
    <insert id="userAdd" parameterType="com.lxy.charge.pojo.charge.User">
        INSERT INTO user (id, name, password, plate, phone, balance)
        VALUES (#{id, jdbcType=INTEGER}, #{name, jdbcType=VARCHAR}, #{password, jdbcType=VARCHAR},
                #{plate, jdbcType=VARCHAR}, #{phone, jdbcType=VARCHAR}, #{balance, jdbcType=DOUBLE})
    </insert>

    <update id="userEdit" parameterType="com.lxy.charge.pojo.charge.User">
        UPDATE user SET
                        name = #{name, jdbcType=VARCHAR},
                        password = #{password, jdbcType=VARCHAR},
                        plate = #{plate, jdbcType=VARCHAR},
                        phone = #{phone, jdbcType=VARCHAR},
                        balance = #{balance, jdbcType=DOUBLE}
        WHERE id = #{id, jdbcType=INTEGER}
    </update>

    <delete id="userDeleteByIds">
        delete from user where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
</mapper>